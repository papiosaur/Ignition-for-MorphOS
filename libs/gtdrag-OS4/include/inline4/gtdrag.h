#ifndef INLINE4_GTDRAG_H
#define INLINE4_GTDRAG_H

/*
** This file was auto generated by idltool 53.1.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_GTDRAG_H
#include <libraries/gtdrag.h>
#endif
#include <interfaces/gtdrag.h>

/* Inline macros for Interface "main" */
#define GTD_GetIMsg(iport) IGtdrag->GTD_GetIMsg((iport)) 
#define GTD_ReplyIMsg(msg) IGtdrag->GTD_ReplyIMsg((msg)) 
#define GTD_FilterIMsg(msg) IGtdrag->GTD_FilterIMsg((msg)) 
#define GTD_PostFilterIMsg(msg) IGtdrag->GTD_PostFilterIMsg((msg)) 
#define GTD_AddAppA(name, tagList) IGtdrag->GTD_AddAppA((name), (tagList)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GTD_AddApp(...) IGtdrag->GTD_AddApp(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GTD_AddApp(vargs...) IGtdrag->GTD_AddApp(## vargs) 
#endif
#define GTD_RemoveApp() IGtdrag->GTD_RemoveApp() 
#define GTD_AddWindowA(win, tagList) IGtdrag->GTD_AddWindowA((win), (tagList)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GTD_AddWindow(...) IGtdrag->GTD_AddWindow(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GTD_AddWindow(vargs...) IGtdrag->GTD_AddWindow(## vargs) 
#endif
#define GTD_RemoveWindow(win) IGtdrag->GTD_RemoveWindow((win)) 
#define GTD_AddGadgetA(type, gad, win, tagList) IGtdrag->GTD_AddGadgetA((type), (gad), (win), (tagList)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GTD_AddGadget(type, gad, ...) IGtdrag->GTD_AddGadget((type), (gad), __VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GTD_AddGadget(type, gad, vargs...) IGtdrag->GTD_AddGadget(type, gad, ## vargs) 
#endif
#define GTD_RemoveGadget(gad) IGtdrag->GTD_RemoveGadget((gad)) 
#define GTD_RemoveGadgets(gad) IGtdrag->GTD_RemoveGadgets((gad)) 
#define GTD_SetAttrsA(gad, tags) IGtdrag->GTD_SetAttrsA((gad), (tags)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GTD_SetAttrs(...) IGtdrag->GTD_SetAttrs(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GTD_SetAttrs(vargs...) IGtdrag->GTD_SetAttrs(## vargs) 
#endif
#define GTD_GetAttr(gad, d0arg, storage) IGtdrag->GTD_GetAttr((gad), (d0arg), (storage)) 
#define GTD_GetHook(num) IGtdrag->GTD_GetHook((num)) 
#define GTD_GetString(od, buf, len) IGtdrag->GTD_GetString((od), (buf), (len)) 
#define GTD_PrepareDrag(gad, gpi) IGtdrag->GTD_PrepareDrag((gad), (gpi)) 
#define GTD_BeginDrag(gad, gpi) IGtdrag->GTD_BeginDrag((gad), (gpi)) 
#define GTD_HandleInput(gad, gpi) IGtdrag->GTD_HandleInput((gad), (gpi)) 
#define GTD_StopDrag(gad) IGtdrag->GTD_StopDrag((gad)) 
#define FreeTreeList(pool, treelist) IGtdrag->FreeTreeList((pool), (treelist)) 
#define InitTreeList(treelist) IGtdrag->InitTreeList((treelist)) 
#define FreeTreeNodes(pool, list) IGtdrag->FreeTreeNodes((pool), (list)) 
#define AddTreeNode(pool, tree, name, image, flags) IGtdrag->AddTreeNode((pool), (tree), (name), (image), (flags)) 
#define CloseTreeNode(main, treenode) IGtdrag->CloseTreeNode((main), (treenode)) 
#define OpenTreeNode(main, treenode) IGtdrag->OpenTreeNode((main), (treenode)) 
#define ToggleTreeNode(main, treenode) IGtdrag->ToggleTreeNode((main), (treenode)) 
#define GetTreeContainer(treenode) IGtdrag->GetTreeContainer((treenode)) 
#define GetTreePath(treenode, buffer, len) IGtdrag->GetTreePath((treenode), (buffer), (len)) 
#define FindTreePath(tree, path) IGtdrag->FindTreePath((tree), (path)) 
#define FindTreeSpecial(tree, special) IGtdrag->FindTreeSpecial((tree), (special)) 
#define FindListSpecial(list, special) IGtdrag->FindListSpecial((list), (special)) 
#define ToggleTree(gad, treenode, msg) IGtdrag->ToggleTree((gad), (treenode), (msg)) 

#endif /* INLINE4_GTDRAG_H */
